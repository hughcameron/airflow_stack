kind: pipeline
name: default

steps:
  - name: compose up
    image: docker/compose:1.24.0-rc1
    environment:
      DOCKER_SOCKET:
        from_secret: DOCKER_SOCKET
      DOMAIN:
        from_secret: DOMAIN
      IP_RANGE:
        from_secret: IP_RANGE
      TIMEZONE:
        from_secret: TIMEZONE
      AIRFLOW_EMAIL:
        from_secret: AIRFLOW_EMAIL
      AIRFLOW_USER:
        from_secret: AIRFLOW_USER
      AIRFLOW_FIRSTNAME:
        from_secret: AIRFLOW_FIRSTNAME
      AIRFLOW_LASTNAME:
        from_secret: AIRFLOW_LASTNAME
      AIRFLOW_PASSWORD:
        from_secret: AIRFLOW_PASSWORD
      AIRFLOW_FERNET_KEY:
        from_secret: AIRFLOW_FERNET_KEY
      AIRFLOW_DATABASE_NAME:
        from_secret: AIRFLOW_DATABASE_NAME
      AIRFLOW_DATABASE_USERNAME:
        from_secret: AIRFLOW_DATABASE_USERNAME
      AIRFLOW_DATABASE_PASSWORD:
        from_secret: AIRFLOW_DATABASE_PASSWORD
      WAREHOUSE_NAME:
        from_secret: WAREHOUSE_NAME
      WAREHOUSE_USERNAME:
        from_secret: WAREHOUSE_USERNAME
      WAREHOUSE_PASSWORD:
        from_secret: WAREHOUSE_PASSWORD
      MINIO_ACCESS_KEY:
        from_secret: MINIO_ACCESS_KEY
      MINIO_SECRET_KEY:
        from_secret: MINIO_SECRET_KEY
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - docker-compose -p airflowstack down
      - docker volume rm airflowstack_airflow_data
      - docker volume rm airflowstack_airflow_database_data
      - docker volume rm airflowstack_airflow_scheduler_data
      - docker volume rm airflowstack_airflow_worker_data
      - docker volume rm airflowstack_minio_data
      - docker volume rm airflowstack_redis_data
      - docker volume rm airflowstack_warehouse_data
      - docker-compose -p airflowstack up -d

  - name: requirements
    image: docker:dind
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - docker cp requirements.txt airflow:/tmp/
      - docker exec --user root airflow /opt/bitnami/airflow/venv/bin/pip install -r /tmp/requirements.txt
      - docker exec --user root airflow rm /tmp/requirements.txt

      - docker cp requirements.txt airflow-worker:/tmp/
      - docker exec --user root airflow-worker /opt/bitnami/airflow/venv/bin/pip install -r /tmp/requirements.txt
      - docker exec --user root airflow-worker rm /tmp/requirements.txt

      - docker cp requirements.txt airflow-scheduler:/tmp/
      - docker exec --user root airflow-scheduler /opt/bitnami/airflow/venv/bin/pip install -r /tmp/requirements.txt
      - docker exec --user root airflow-scheduler rm /tmp/requirements.txt

  - name: jupyterlab
    image: docker:dind
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    environment:
      DAGGER_NOTEBOOK_PASSWORD:
        from_secret: DAGGER_NOTEBOOK_PASSWORD
    commands:
      - docker exec --user root airflow-worker mkdir /home/dagger
      - docker exec --user root airflow-worker /opt/bitnami/airflow/venv/bin/pip install jupyterlab
      - docker exec -d --user root airflow-worker jupyter lab --ip=0.0.0.0 --port=2000 --allow-root -y --notebook-dir='/home/dagger' --NotebookApp.password=$DAGGER_NOTEBOOK_PASSWORD

volumes:
  - name: dockersock
    host:
      path: /volume1/docker/config/docker.sock
